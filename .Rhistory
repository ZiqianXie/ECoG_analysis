install.package('swirl')
install.package("swirl")
install.package("swirl")
install.packages("swirl")
library('swirl')
swirl()
12
5+7
x = 5+7
x <- 5+7
x
x-3
c(1,2,3)
y<-x-3
y
c(1,1,9,3,14)
c(1.1,9,3,14)
info()
z<-c(1.1,9,3,14)
z<- c(1.1,9,3,14)
z <- c(1.1,9,3,14)
z <- c(1.1, 9, 3,14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z * 2 + 1000
my_div
swirl()
clear
rm()
rm(list=ls)()
rm(list=ls()
)
?ls
?rm
swirl)()
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
dir()
?list.files
args(list.files)
old.dir <- getwd()
dir.create('testdir')
dir()
?list
setwd('testdir')
file.create('mytest.R')
list.files()
file.exists('mytest.R')
file.info('mytest.R')
?file.rename
?file.rename()
file.rename('mytest.R','mytest2.R')
file.copy('mytest2.R','mytest3.R')
file.path('mytest3.R')
?file.path
file.path('mytest3.R',folder1,folder2)
file.path('folder1')
file.path('folder1','folder2')
?dir.create
dir.create(filr.path('testdir2','testdir3'),recursive = TRUE)
dir.create(file.path('testdir2','testdir3'),recursive = TRUE)
unlink('testdir2',recursive=TRUE)
setwd('old.dir')
old.dir
setwd(old.dir)
getwd()
unlink('testdir',recursive=TRUE)
1:20
pi:20
pi:10
15:1
?':'
seq(1,20)
seq(1,20,.5)
seq(1,20,by=.5)
seq(1,20, by=.5)
seq(0,10,.5)
seq(5,10,30)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,40)
rep(0,times = 40)
rep(c(0,1,2), 10)
rep(c(0,1,2), times = 10)
rep(c(0,1,2),each=19)
rep(c(0,1,2),each=10)
num_vect = c(.5, 55, -10, 6)
num_vect <- c(.5, 55, -10, 6)
tf <- num_vect<1
tf
num_vect >= 6
my_char <- c('My','name', 'is')
my_char
paste(my_char,collapse=' ')
paste(c(my_char,'Ziqian'),collapse = ' ')
paste(my_name = c(my_char,'Ziqian'),collapse = ' ')
my_name = c(my_char,'Ziqian')
my_name
paste(my_name, collapse = ' ')
paste('Hello','World!', seq = ' ')
paste('Hello','World!', seq = " ")
paste('Hello','world!', seq = " ")
paste('Hello','world!', sep = " ")
paste(1:3,c('X','Y','Z'),sep ='')
paste(LETTERS,1:4,sep = '-')
c(44,NA,5,NA)
x = c(44,NA,5,NA)
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
print(my_na)
my_na
my_data == NA
sum(my_na)
my_data
0/0
1/0-1/0
Inf - Inf
swirl
swirl()
?sample
?randu
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x
| > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
c(11,2,NA)
vect2<-c(11,2,NA)
names(vect2)<-c('foo','bar','norf')
?vector
play()
x = c(1,2)
x == vector(1,2)
as.vector(x)
x == as.vector(x)
vect
nxt()
identical(vect, vect2)
vect[2]
vect['bar']
dim(vect)
length(vect)
?length
vect[c('foo','bar')]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
my_vector
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix, my_matrix2)
?names
patients <- c('Bill','Gina','Kelly','Sean')
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient","age", "weight", "bp", "rating", "test")
colnames(my_data,cnames)
?colnames
colnames(my_data)<-cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 < 10
10 <=10
5 != 7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
?'&&'
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6,!FALSE)
ints <- sample(10)
ints
?sample
ints > 5
which(ints>7)
any(ints<0)
all(ints>0)
sys.Date()
Sys.Date()
mean(c(2,4,5))
?submit
submit()
submit()
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
2/10
2%10
2//10
2%/%10
2%%10
?'%%'
submit()
submit()
submit()
remainder(5)
remainder(11,5)
remainder(devisor = 11, num = 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
?stderr
evaluate(sd,c(1.4,3.6,7.9,8.8)
)
evaluate(function(x){x+1}, 6)
evaluate(function(x){fst(x)},c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming",
| "is", "fun!")
paste("Programming", "is", "fun!")
submit()
telegram()
submit()
submit()
list(c(1,2,3))
list(1,2,3
)
submit()
submit()
mad_libs(place='a',adjective='b',noun='c')
submit()
'I' %p% 'love' %p% 'R!'
library('swirl')
swirl
swirl()
flags
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply(flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flags_colors <- flags[,11:17]
flag_colors <- flags[,11:17]
rm(flags_colors)
?rm
rm('flags_colors'')
rm('flags_colors')
flags_colors
rm('flags_colors')
rm(list=ls())
head(flag_colors)
play()
rm(list=ls())
nxt()
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
flag_shapes <- flag[, 19:23]
quit
quit()
library('swirl')
swirl()
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,6,6))
unique(c(3,4,5,5,5,6,6))
lapply(flags,unique)
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(e)e[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
flags$landmass
table(flags$animate)
tapply(flags$animate,flags@landmass,mean)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
colnames(plants)
rownames(plants)
colnames(plants)
ncol(plants)
object.size(plants)
names(plants)
head()
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plant$Active_Growth_Period)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips<-sample(c(0,1),100,prob=c(.3,.7),replace=TRUE)
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=.7)
dbinom(1,size = 100,prob = .7)
dbinom(1:100,100,.5)
rbinorm(100,size=1,prob=.7)
flips2<-rbinom(100,size=1,prob=.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd =25)
rpois(5,size=1,mean=10)
?rpois
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
colMeans(my_pois)
cm<-colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
?unclass
as.Date("1969-01-01")
d2<-as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1<-Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2<-as.POSIXlt(Sys.time())
t2
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
clss(t4)
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(),t1,units = 'days')
data(cars)
?data
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed,y=cars$dist)
plot(dist~speed,cars)
plot(speed~dist,cars)
plot(x=cars$dist,y=cars$speed)
plot(dist~speed,cars)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, main='My Plot')
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", sub="My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim = c(10,15))
plot(cars, pch=2)
data(mtcars)
?boxplot
boxplot(mpg~cyl, data = mtcars)
hist(mtcars$mpg)
?'%*%'
?par
ï¼Ÿpar
?par
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
?h5read
dir()
pwd()
cd("D:\Ziqian")
?cd
install.packages("picasso")
setwd("D/Ziqian/ECoG_analayisi")
setwd("D/Ziqian/ECoG_analaysis")
getwd()
setwd("D:/Ziqian/ECoG_analysis/")
Y<-h5read("ECoG_big_data.h5","sub1/train_clabel")
library(rhdf5)
X<-h5read("ECoG_big_data.h5","sub1/train_data")
Y<-h5read("ECoG_big_data.h5","sub1/train_clabel")
library(picasso)
install.packages(picasso)
install.packages("picasso")
install.packages("picasso")
install.packages("picasso")
